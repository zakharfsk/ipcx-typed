[project]
name = "ipcx-typed"
version = "0.1.1"
description = "Inter-Process Communication (IPC) library for Python with type safety"
authors = [
    {name = "zakharfsk",email = "68950796+zakharfsk@users.noreply.github.com"}
]
license = "MIT"
license-file = ["LICENSE"]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiohttp (>=3.11.18,<4.0.0)",
    "pydantic (>=2.11.4,<3.0.0)"
]
keywords = [
    "ipc",
    "ipcx",
    "ipcx-typed",
    "ipcx-typed-python",
    "discord.py",
    "fastapi",
    "python",
    "asyncio",
    "networking"
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://github.com/zakharfsk/ipcx"
Documentation = "https://github.com/zakharfsk/ipcx/blob/main/README.md"
Repository = "https://github.com/zakharfsk/ipcx"
Issue = "https://github.com/zakharfsk/ipcx/issues"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.examples.dependencies]
fastapi = {extras = ["standard"], version = "^0.115.12"}
discord = "^2.3.2"

[tool.poetry.group.test.dependencies]
pytest = ">=8.0.0"
pytest-asyncio = ">=0.23.5"
pytest-cov = ">=4.1.0"
coverage = ">=7.4.1"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
pre-commit = "^4.2.0"
ruff = "^0.11.8"

[tool.ruff]
line-length = 120
include = ["ipcx_typed/**", "examples/**", "tests/**"]

[tool.ruff.lint]
ignore = [
    "E501", 
    "N999", 
    "E402", 
    "S311",
    "S101",
    
    # These are recommended by Ruff if the formatter is to be used: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002"
]
select = ["E", "F", "N", "ASYNC", "S", "ERA", "I"]
fixable = ["ALL"]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.format]
docstring-code-format = true
